trigger: none
pr:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
- group: pythonrest-cli

jobs:
- job: ValidateCommitMessage
  displayName: Validate commit message
  pool:
    vmImage: windows-latest
  steps:
  - checkout: self

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.11'
      addToPath: true
    displayName: 'Set up Python 3.11'

  - powershell: |
      git fetch --all --unshallow
      $last_commit_message = git log -1 --pretty=%s $(git rev-list --no-merges -n 1 HEAD)
      if ($last_commit_message -match 'version\s?[0-9]+\.[0-9]+\.[0-9]+') {
        Write-Host "Commit message contains a valid version format: $last_commit_message"
      } else {
        Write-Host "Error: The commit message does not contain a valid version format (versionX.X.X)."
        Write-Host "Last commit message: $last_commit_message"
        exit 1
      }
    displayName: "Check commit message format"

  - script: |
      python --version
      choco install docker-desktop -y
      docker --version
      docker-compose version
      net start com.docker.service
      if not docker info >nul 2>&1; then
        echo 'Docker is not running!'; exit 1;
      fi
    displayName: 'Install and verify Python 3.11 and Docker'

  - script: |
      python -m venv venv
      venv\Scripts\activate
      pip install --upgrade pip setuptools wheel
      python setup.py sdist
    displayName: 'Validate pip package build'

  - script: |
      python -m venv venv
      venv\Scripts\activate
      pip install --upgrade pip
      pip install -r requirements.txt
      pwsh -Command "& { ./tests/Databases/MySQL/test_mysql.ps1 }"
      rmdir /S /Q PythonRestAPI
    displayName: 'Test MySQL DB API creation'

  - script: |
      python -m venv venv
      venv\Scripts\activate
      pip install --upgrade pip
      pip install -r requirements.txt
      pwsh -Command "& { ./tests/Databases/PostgreSQL/test_postgresql.ps1 }"
      rmdir /S /Q PythonRestAPI
    displayName: 'Test PostgreSQL DB API creation'

  - script: |
      python -m venv venv
      venv\Scripts\activate
      pip install --upgrade pip
      pip install -r requirements.txt
      pwsh -Command "& { ./tests/Databases/SQLServer/test_sqlserver.ps1 }"
      rmdir /S /Q PythonRestAPI
    displayName: 'Test SQL Server DB API creation'
    